generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @map("_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  role          UserRole        @default(USER)
  information   UserInformation @relation(fields: [informationId], references: [id])
  informationId String
  emails        UserEmail[]
  apiKeys       ApiKey[]
  apiApps       ApiApp[]

  username String @unique
  password String
  salt     String
}

enum UserRole {
  ADMIN
  USER
}

model UserInformation {
  id        String   @id @default(uuid()) @map("_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User[]

  displayName String?
}

model UserEmail {
  id        String   @id @default(uuid()) @map("_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id])
  userId String

  email    String  @unique
  verified Boolean @default(false)
  primary  Boolean @default(false)
}

model ApiKey {
  id        String   @id @default(uuid()) @map("_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User     @relation(fields: [userId], references: [id])
  userId String
  apps   String[]

  apiKey  String    @unique
  expires DateTime?
  enable  Boolean   @default(true)
}

model ApiApp {
  id        String   @id @default(uuid()) @map("_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  author   User   @relation(fields: [authorId], references: [id])
  authorId String

  name String @unique
}
